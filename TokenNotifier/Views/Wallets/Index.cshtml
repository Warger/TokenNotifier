@model ReflectionIT.Mvc.Paging.PagingList<TokenNotifier.Models.Wallet>

@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging


@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>


<nav aria-label="Wallets navigation">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exchange)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a href="@item.GetUrl">
                    @Html.DisplayFor(modelItem => item.Address)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GetExcange)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.WalletID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.WalletID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.WalletID">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<nav aria-label="Wallets navigation">
    <vc:pager paging-list="@Model" />
</nav>

